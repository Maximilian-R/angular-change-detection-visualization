/* You can add global styles to this file, and also import other style files */

:root {
  --view-color-background: #fff;
  --view-color-1: #303030;
  --view-color-2: #a3d7ec;
  --view-color-3: #f0a2b9;
  --view-color-text: #303030;
  --view-color-text-inverted: white;
  --background-color: #eeeeee;

  --tree-line-color: #303030;
  --tree-line-width: 0.125em;
  --tree-node-margin: 2em;
}

* {
  margin: 0;
}

html {
  max-width: 100vw;
}

body {
  font-family: monospace;
  color: var(--view-color-text);
  font-weight: 400;
  background-color: var(--background-color);
  display: flex;
  justify-content: center;

  > cdv-app {
    max-width: 1200px;
  }
}

button {
  font-weight: 400;
  font-family: inherit;
  border: none;
  cursor: pointer;
}

header {
  padding: 0 1rem;
  margin-bottom: 2rem;
  text-align: center;

  h1 {
    margin-bottom: 1rem;
    margin-top: 1rem;
  }

  .actions {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
  }

  button {
    white-space: nowrap;
    background-color: var(--view-color-2);
    color: var(--view-color-text);
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    font-size: 1rem;
    margin: 0.5rem;
  }
}

main {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.tree-container {
  width: 100%;
  display: grid;
  text-align: center;
  grid-template-columns: 1fr 1fr;

  h2 {
    margin-bottom: 1rem;
  }
}

.tree {
  font-size: 1rem;
}

.node {
  display: flex;
  flex-direction: column;

  &.checked {
    > .content {
      background-color: var(--view-color-2);
    }
  }

  &.root > .content {
    cursor: default;
  }

  .content {
    cursor: pointer;
    position: relative;
    align-self: center;
    display: grid;
    row-gap: 0.5em;
    font-size: 1em;
    padding: 0.5em 0.75em;
    border-radius: 0.25em;
    text-align: center;
    margin-left: 0.5em;
    margin-right: 0.5em;
    box-shadow: 0 0 0.5em 0 rgba(0, 0, 0, 0.15);
    background-color: var(--view-color-background);
    color: var(--view-color-text);
    transition: background-color 200ms ease-in-out;

    > p {
      pointer-events: none;
    }
  }

  > .children {
    display: flex;
    margin-top: var(--tree-node-margin);
    position: relative;

    &::after {
      content: "";
      height: calc(var(--tree-node-margin) * 0.5);
      width: var(--tree-line-width);
      background-color: var(--tree-line-color);
      display: block;
      left: 50%;
      top: calc(-1 * var(--tree-node-margin));
      position: absolute;
    }

    > * {
      flex-grow: 1;
      position: relative;

      &::after {
        content: "";
        height: calc(var(--tree-node-margin) * 0.5);
        width: var(--tree-line-width);
        background-color: var(--tree-line-color);
        display: block;
        left: 50%;
        top: calc(var(--tree-node-margin) * -0.5);
        position: absolute;
      }

      &:first-child:not(:only-child) {
        &::before {
          content: "";
          height: var(--tree-line-width);
          width: 50%;
          background-color: var(--tree-line-color);
          display: block;
          left: 50%;
          top: calc(var(--tree-node-margin) * -0.5);
          position: absolute;
        }
      }

      &:not(:only-child):not(:first-child):not(:last-child) {
        &::before {
          content: "";
          height: var(--tree-line-width);
          width: 100%;
          background-color: var(--tree-line-color);
          display: block;
          top: calc(var(--tree-node-margin) * -0.5);
          position: absolute;
        }
      }

      &:last-child:not(:only-child) {
        &::before {
          content: "";
          height: var(--tree-line-width);
          width: 50%;
          background-color: var(--tree-line-color);
          display: block;
          right: 50%;
          top: calc(var(--tree-node-margin) * -0.5);
          position: absolute;
        }
      }
    }
  }
}

app-context-menu {
  position: absolute;
}
.context-menu {
  display: grid;
  visibility: hidden;
  opacity: 0;
  flex-direction: column;
  border-radius: 0.25em;
  overflow: hidden;
  box-shadow: 0 0 0.5em 0 rgba(0, 0, 0, 0.15);
  position: absolute;
  z-index: 1;
  transition: opacity 150ms ease-in-out, visibility 150ms;

  &.display {
    visibility: visible;
    opacity: 1;
  }

  button {
    font-size: 0.8em;
    background: var(--view-color-text);
    color: var(--view-color-text-inverted);
    padding: 0.25em 0.5em;
    transition: background-color 200ms ease-in-out, color 200ms ease-in-out;

    &:hover {
      background: var(--view-color-3);
    }
  }
}

.cards {
  box-sizing: border-box;
  width: 100%;
  padding: 6rem 0.5rem 2rem;
  display: grid;
  gap: 1rem;
  grid-template-columns: 1fr 1fr;

  @media (max-width: 800px) {
    grid-template-columns: 1fr;
  }

  .card {
    padding: 1rem;
    background: var(--view-color-text-inverted);
    color: var(--view-color-text);
    border-radius: 0.25rem;
    font-size: 1rem;
    line-height: 1.5rem;
    font-family: monospace;

    h3 {
      color: var(--view-color-3);
      font-size: 1.25rem;
      margin-bottom: 0.5rem;
    }

    p {
      font-size: 0.8em;
      font-family: monospace;
    }

    code {
      background-color: var(--view-color-2);
      padding: 0.25rem;
      border-radius: 0.25rem;
      font-size: 0.8rem;
    }
  }
}
